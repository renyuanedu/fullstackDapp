{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\"; // 导入的是一个函数,通过函数的中传入的地址获取实例\n\nimport Campaign from \"../../ethereum/campaign\";\nimport Layout from '../../components/Layout';\nimport ContributeFrom from \"../../components/contributeForm\";\nimport web3 from \"../../ethereum/web3\";\nimport { Grid, Button, Card, Column } from \"semantic-ui-react\";\nimport { Link } from '../../routes';\n\nvar Compaignshow = /*#__PURE__*/function (_React$Component) {\n  _inherits(Compaignshow, _React$Component);\n\n  var _super = _createSuper(Compaignshow);\n\n  function Compaignshow() {\n    _classCallCheck(this, Compaignshow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Compaignshow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          address = _this$props.address,\n          mininumContribute = _this$props.mininumContribute,\n          balance = _this$props.balance,\n          requestCount = _this$props.requestCount,\n          approvesCount = _this$props.approvesCount,\n          manager = _this$props.manager;\n      var items = [{\n        header: manager,\n        description: \"当前管理者创建了众筹列表，并且是众筹的受益人\",\n        meta: \"管理者的地址\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: mininumContribute,\n        description: \"你想对此众筹投资，就需要至少大于总金额\",\n        meta: \"最小贡献量\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: requestCount,\n        description: \"当前的管理者创建请求从合约中提钱，必须要大于50%的投资人同意\",\n        meta: \"请求数量\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: approvesCount,\n        description: \"已经为当前众筹的投资人的数量\",\n        meta: \"投资人的数量\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        description: \"当前众筹中，还剩下了多少的金额.\",\n        meta: \"众筹总的金额(ether)\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h1\", null, \"\\u4F17\\u7B79\\u663E\\u793A \"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 10\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(ContributeFrom, {\n        address: this.props.address\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/compaigns/\".concat(this.props.address, \"/requests\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \" \\u67E5\\u770B\\u8BF7\\u6C42\")))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var campaign, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(props.query.address);\n              //获取众筹的实例，\n              campaign = Campaign(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              return _context.abrupt(\"return\", {\n                address: props.query.address,\n                mininumContribute: summary[0],\n                balance: summary[1],\n                requestCount: summary[2],\n                approvesCount: summary[3],\n                manager: summary[4]\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Compaignshow;\n}(React.Component);\n\nexport default Compaignshow;","map":{"version":3,"sources":["D:/fullstackDapp/pages/compaigns/show.js"],"names":["React","Campaign","Layout","ContributeFrom","web3","Grid","Button","Card","Column","Link","Compaignshow","props","address","mininumContribute","balance","requestCount","approvesCount","manager","items","header","description","meta","style","overflowWrap","utils","fromWei","renderCards","campaign","query","methods","getSummary","call","summary","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// 导入的是一个函数,通过函数的中传入的地址获取实例\nimport Campaign from \"../../ethereum/campaign\";\nimport Layout from '../../components/Layout';\nimport ContributeFrom from \"../../components/contributeForm\";\nimport web3 from \"../../ethereum/web3\";\nimport {Grid,Button,Card,Column} from \"semantic-ui-react\";\nimport {Link} from '../../routes';\n\nclass Compaignshow extends React.Component{\n  static async getInitialProps(props){\n    // console.log(props.query.address);\n    //获取众筹的实例，\n  const campaign =  Campaign(props.query.address);\n  const summary = await campaign.methods.getSummary().call();\n    return {\n      address:props.query.address,\n      mininumContribute:summary[0],\n      balance:summary[1],\n      requestCount:summary[2],\n      approvesCount:summary[3],\n      manager:summary[4],\n    };\n  }\n\n  renderCards(){\n    const {\n      address,\n      mininumContribute,\n      balance,\n      requestCount,\n      approvesCount,\n      manager,\n    }=this.props;\n\n    const items = [\n      {\n        header : manager,\n        description : \"当前管理者创建了众筹列表，并且是众筹的受益人\",\n        meta : \"管理者的地址\",\n        style : {overflowWrap:'break-word'}\n      },\n      {\n        header : mininumContribute,\n        description : \"你想对此众筹投资，就需要至少大于总金额\",\n        meta : \"最小贡献量\",\n        style : {overflowWrap:'break-word'}\n      },\n      {\n        header : requestCount,\n        description : \"当前的管理者创建请求从合约中提钱，必须要大于50%的投资人同意\",\n        meta : \"请求数量\",\n        style : {overflowWrap:'break-word'}\n      },\n      {\n        header : approvesCount,\n        description : \"已经为当前众筹的投资人的数量\",\n        meta : \"投资人的数量\",\n        style : {overflowWrap:'break-word'}\n      },\n      {\n        header : web3.utils.fromWei(balance,\"ether\"),\n        description : \"当前众筹中，还剩下了多少的金额.\",\n        meta : \"众筹总的金额(ether)\",\n        style : {overflowWrap:'break-word'}\n      }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render(){\n\n    return (\n      <Layout>\n        <h1>众筹显示 </h1>\n        <Grid>\n          <Grid.Row>\n\n            <Grid.Column width={10}>\n              {this.renderCards()}\n\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <ContributeFrom address={this.props.address}/>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Link route = {`/compaigns/${this.props.address}/requests`}>\n                <a>\n                  <Button primary> 查看请求</Button>\n                </a>\n              </Link>\n              </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n      </Layout>\n    );\n  }\n}\n\nexport default Compaignshow;"]},"metadata":{},"sourceType":"module"}