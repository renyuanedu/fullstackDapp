{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport web3 from '../ethernum/web3';\nimport Campaign from '../ethernum/campaign';\n\nclass RequestRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approvelRequst(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    //console.log(this.props.address);\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, {\n      disabled: request.compelte\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipients), __jsx(Cell, null, request.approvCount, \" /\", approversCount), __jsx(Cell, null, request.compelte ? null : __jsx(Button, {\n      color: \"green\",\n      onClick: this.onApprove\n    }, \"\\u540C\\u610F\")), __jsx(Cell, null, request.compelte ? null : __jsx(Button, {\n      color: \"green\",\n      onClick: this.onFinalize\n    }, \"\\u5B8C\\u6210\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["D:/fullstackDapp/components/RequestRow.js"],"names":["React","Table","web3","Campaign","RequestRow","Component","campaign","props","address","accounts","eth","getAccounts","methods","approvelRequst","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","compelte","description","utils","fromWei","value","recipients","approvCount","onApprove","onFinalize"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AAAA;AAAA;;AAAA,uCAG3B,YAAS;AAEnB,YAAMC,QAAQ,GAAGH,QAAQ,CAAC,KAAKI,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACxDC,QAAAA,IAAI,EAACP,QAAQ,CAAC,CAAD;AAD2C,OAApD,CAAN;AAGD,KAVsC;;AAAA,wCAY1B,YAAS;AACpB,YAAMH,QAAQ,GAAGH,QAAQ,CAAC,KAAKI,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;AACA,YAAML,QAAQ,CAACM,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACzDC,QAAAA,IAAI,EAACP,QAAQ,CAAC,CAAD;AAD4C,OAArD,CAAN;AAGD,KAlBsC;AAAA;;AAoBtCS,EAAAA,MAAM,GAAE;AACN;AACA,UAAM;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL,QAAcnB,KAApB;AACA,UAAM;AAACa,MAAAA,EAAD;AAAIO,MAAAA,OAAJ;AAAYC,MAAAA;AAAZ,QAA8B,KAAKf,KAAzC;AAEA,WACE,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAEc,OAAO,CAACE;AAAvB,OACE,MAAC,IAAD,QAAOT,EAAP,CADF,EAEE,MAAC,IAAD,QAAOO,OAAO,CAACG,WAAf,CAFF,EAGE,MAAC,IAAD,QAAOtB,IAAI,CAACuB,KAAL,CAAWC,OAAX,CAAmBL,OAAO,CAACM,KAA3B,EAAiC,OAAjC,CAAP,CAHF,EAIE,MAAC,IAAD,QAAON,OAAO,CAACO,UAAf,CAJF,EAKE,MAAC,IAAD,QAAOP,OAAO,CAACQ,WAAf,QAA8BP,cAA9B,CALF,EAMA,MAAC,IAAD,QAEKD,OAAO,CAACE,QAAR,GAAiB,IAAjB,GAAuB,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKO;AAApC,sBAF5B,CANA,EAYA,MAAC,IAAD,QAEMT,OAAO,CAACE,QAAR,GAAiB,IAAjB,GAAuB,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKQ;AAApC,sBAF7B,CAZA,CADF;AAqBD;;AA9CqC;;AAkDxC,eAAe3B,UAAf","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport web3 from '../ethernum/web3';\nimport Campaign from '../ethernum/campaign';\n\nclass RequestRow extends React.Component{\n\n\n onApprove = async()=>{\n\n   const campaign = Campaign(this.props.address);\n   const accounts = await web3.eth.getAccounts();\n   await campaign.methods.approvelRequst(this.props.id).send({\n     from:accounts[0]\n   });\n }\n\n onFinalize = async()=>{\n   const campaign = Campaign(this.props.address);\n   const accounts = await web3.eth.getAccounts();\n   await campaign.methods.finalizeRequest(this.props.id).send({\n     from:accounts[0]\n   });\n }\n\n  render(){\n    //console.log(this.props.address);\n    const {Row,Cell}  = Table;\n    const {id,request,approversCount} = this.props;\n\n    return (\n      <Row disabled={request.compelte}>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value,'ether')}</Cell>\n        <Cell>{request.recipients}</Cell>\n        <Cell>{request.approvCount} /{approversCount}</Cell>\n      <Cell>\n         {\n           request.compelte?null:(<Button color=\"green\" onClick={this.onApprove}>同意</Button>)\n         }\n\n      </Cell>\n      <Cell>\n          {\n            request.compelte?null:(<Button color=\"green\" onClick={this.onFinalize}>完成</Button>)\n          }\n\n      </Cell>\n      </Row>\n    );\n  }\n\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}